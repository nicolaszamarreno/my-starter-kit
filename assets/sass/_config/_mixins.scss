/* # Rétablissement du flux */

/*
http://nicolasgallagher.com/micro-clearfix-hack/
*/

@mixin clearfix
{
  //zoom: 1;

  &:before,
  &:after
  {
    content: '';
    display: table;
  }
  &:after
  {
    clear: both;
  }
}

/* # _Reset_ (et sa version surchargée) */

@mixin reset
{
  margin:  0;
  padding: 0;
  border:  0;
  background-color: transparent; // pour les boutons
  list-style-type: none; // pour les listes
}


/**** Keyframes Animation ****/
@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content;
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  }
}

/*
https://developer.yahoo.com/blogs/ydn/clip-hidden-content-better-accessibility-53456.html
*/

@mixin hide-for-viewer
{
  position: absolute;
  height:  1px;
  width:   1px;
  padding: 0;
  border:  0;
  overflow: hidden;
  clip: rect(1px  1px  1px  1px);
  clip: rect(1px, 1px, 1px, 1px);
}



/* # Survol des liens */

/* Pas de soulignement par défaut, puis soulignement au survol ou au focus. */

@mixin deco-roll
{
  text-decoration: none;

  &:hover,
  &:focus
  {
    text-decoration: underline;
  }
}

/* Ou soulignement par défaut, puis pas de soulignement au survol ou au focus. */

@mixin deco-unroll
{
  text-decoration: underline;

  &:hover,
  &:focus
  {
    text-decoration: none;
  }
}

/* # Étirement des blocs */

@mixin stretch($length: 0)
{
  position: absolute;

  left:   $length;
  top:    $length;
  bottom: $length;
  right:  $length;

}



/* # Utilitaire pour la fonction calc() */

@mixin calc($property, $expression)
{
  #{$property}: -webkit-calc(#{$expression});
  #{$property}: calc(#{$expression});
}




// Inline-block bugfix
// @link http://www.alsacreations.com/astuce/lire/1432-display-inline-block-espaces-indesirables.html
@mixin no-inline-block-margin()
{
  margin-right: -0.25em;

}

// imports all fonts
@mixin fonts($path, $fonts, $formats){
    @each $font in $fonts{
        @font-face{
            font-family: "#{$font}";
            font-weight: normal;
            @each $type in $formats{
                @if $type == "eot"{
                    src: url("#{$path}#{$font}.eot");
                    src: url("#{$font}.eot?#iefix") format("embedded-opentype") ;
                }
                @else if $type == "woff2"{
                    src: url('#{$path}#{$font}.woff2') format('woff2');
                }
                @else if $type == "woff"{
                    src: url('#{$path}#{$font}.woff') format('woff');
                }
                @else if $type == "truetype"{
                    src: url('#{$path}#{$font}.ttf')  format('truetype');
                }
                @else if $type == "svg"{
                    src: url('#{$path}#{$font}.svg#svgFontName') format('svg');
                }
            }
        };
    }
}

// create multi layout with z-index
@mixin layer($layer){
    @for $i from 1 through $layer {
        .layout-#{$i} {
            position: relative;
            z-index: #{$i};
        }
    }
}

// Personalize placeholder's inputs
@mixin placeholderInput() {
  &::-webkit-input-placeholder { /* Chrome/Opera/Safari */
    @content;
  }
  &::-moz-placeholder { /* Firefox 19+ */
    @content;
  }
  &:-ms-input-placeholder { /* IE 10+ */
    @content;
  }
  &:-moz-placeholder { /* Firefox 18- */
    @content;
  }
}
